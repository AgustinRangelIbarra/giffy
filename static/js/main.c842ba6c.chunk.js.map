{"version":3,"sources":["components/Gif.js","services/getGifs.js","components/ListOfGifs.js","components/ShowGifs.js","App.js","reportWebVitals.js","index.js"],"names":["Gif","title","id","url","href","className","alt","src","apiKey","getGifs","keyword","cant","apiURL","fetch","then","res","json","response","data","Array","isArray","gifs","map","image","images","downsized_medium","console","log","ListOfGifs","params","useState","Loading","setLoading","setGifs","useEffect","ShowGifs","gif","i","to","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAGe,SAASA,EAAT,GAAkC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,GAAIC,EAAO,EAAPA,IACvC,OACC,oBACAC,KAAI,WAAMF,GACVG,UAAU,mBAFV,UAGA,oBAAIA,UAAU,KAAd,SAAoBJ,IAEpB,qBAAKK,IAAI,MAAMC,IAAKJ,OCVvB,IAAMK,EAAS,mCA8BAC,MA5Bf,WAA+D,IAAD,yDAAvB,GAAuB,IAA3CC,eAA2C,MAAjC,OAAiC,2DAAJ,GAAI,IAAlBC,YAAkB,MAAX,IAAW,EAEvDC,EAAM,uDAAmDJ,EAAnD,cAA+DE,EAA/D,kBAAgFC,EAAhF,8BAEV,OAAOE,MAAMD,GACTE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAa,IACTC,EAAQD,EAARC,KACP,GAAIC,MAAMC,QAAQF,GAAO,CACtB,IAAMG,EAAOH,EAAKI,KAAI,SAAAC,GACSA,EAArBC,OAGP,MAAO,CACJvB,MAJyBsB,EAAbtB,MAKZC,GALyBqB,EAANrB,GAMnBC,IALWoB,EAAMC,OAAOC,iBAApBtB,QASV,OADAuB,QAAQC,IAAIN,GACLA,OCWJO,MA7Bf,YAAiC,IACzBlB,EADwB,EAAVmB,OACdnB,QADwB,EAEDoB,oBAAS,GAFR,mBAExBC,EAFwB,KAEfC,EAFe,OAIPF,mBAAS,IAJF,mBAIxBT,EAJwB,KAIlBY,EAJkB,KAgB/B,OAVAC,qBAAU,WACTF,GAAW,GACXvB,EAAQ,CAAEC,YACRI,MAAK,SAACO,GACNY,EAAQZ,GACRW,GAAW,QAGT,CAACtB,IAEFqB,EAAgB,4CAEbV,EAAKC,KAAI,gBAAGpB,EAAH,EAAGA,GAAID,EAAP,EAAOA,MAAOE,EAAd,EAAcA,IAAd,OACf,cAAC,EAAD,CAECD,GAAIA,EACJD,MAAOA,EACPE,IAAKA,GAHAD,O,OCLOiC,EAdE,WAGhB,OACC,qBAAK9B,UAAU,MAAf,SAHe,CAAC,OAAQ,aAAc,YAAa,cAKzCiB,KAAI,SAACc,EAAKC,GACjB,OAAO,cAAC,IAAD,CAAchC,UAAU,mBAAmBiC,GAAE,eAAUF,GAAvD,SAA+DA,GAApDC,SCiBRE,MAvBf,WAEG,OACG,qBAAKlC,UAAU,MAAf,SACG,0BAASA,UAAU,cAAnB,UACL,cAAC,IAAD,CAAMiC,GAAG,IAAT,SACC,uCAGD,cAAC,EAAD,IAEA,cAAC,IAAD,CACCE,KAAK,gBACLC,UAAWb,UCPDc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.c842ba6c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport '../estilos/Gif.css'\r\n\r\nexport default function Gif( {title, id, url} ) {\r\n  return (\r\n\t  <a \r\n\t  href={`#${id}`} \r\n\t  className='Gif btn btn-dark'>\r\n\t\t\t<h5 className=\"h5\">{title}</h5>\r\n\t\t\t{/* <small className=\"h6\">{id}: </small> */}\r\n\t\t\t<img alt=\"Gif\" src={url} />\r\n\t\t</a>\r\n  );\r\n}\r\n","const apiKey = 'iRtkW6iWrKlyRViyLldlrO5UxFlCWmDL'\r\n\r\nfunction getGifs ({keyword = 'rick'} = {}, {cant = '5'} = {}) {\r\n\t\r\n\tconst apiURL = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${keyword}&limit=${cant}&offset=0&rating=r&lang=en`;\r\n\t\t\r\n   return fetch(apiURL)\r\n      .then(res => res.json())\r\n      .then(response => {\r\n         const {data} = response;\r\n         if( Array.isArray(data)) {\r\n            const gifs = data.map(image => {\r\n               const {images, title, id} = image;\r\n               const {url} = image.images.downsized_medium;\r\n                \r\n               return {\r\n                  title,\r\n                  id,\r\n                  url\r\n               }\r\n            })\r\n            console.log(gifs)\r\n            return gifs\r\n         } else {\r\n            <div>Bruh</div>\r\n         }\r\n\t\t}\r\n\t)\r\n}\r\n\r\nexport default getGifs;\r\n","import React, { useState, useEffect } from 'react'\r\nimport Gif from './Gif'\r\nimport getGifs from \"../services/getGifs\";\r\n\r\nfunction ListOfGifs( {params} ) {\r\n\tconst {keyword} = params;\r\n\tconst [Loading, setLoading] = useState(false)\r\n \r\n\tconst [gifs, setGifs] = useState([]);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tsetLoading(true)\r\n\t\tgetGifs({ keyword })\r\n\t\t\t.then((gifs) => {\r\n\t\t\t\tsetGifs(gifs)\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t}\r\n\t\t);\r\n   }, [keyword]);\t\t\t\t\t\t// keyword es la dependencia del efecto\r\n\r\n\tif (Loading) return <i>Cargando...</i>\r\n\r\n\treturn gifs.map(({ id, title, url }) =>\r\n\t\t<Gif\r\n\t\t\tkey={id}\r\n\t\t\tid={id}\t\t\t\t\t\t// A GIF, pasale todas las props o propiedades \r\n\t\t\ttitle={title}\t\t\t\t// que hay en singleGif\r\n\t\t\turl={url}\r\n\t\t/>\r\n\t);\r\n}\r\n\t// gifs.forEach(singleGif => <img src={singleGif}/>) NO USAR FOREACH - NO SE DEVUELVE NADA\r\n\r\nexport default ListOfGifs;","import React from 'react'\r\nimport { Link } from 'wouter'\r\nimport \"../App.css\";\r\nimport \"../estilos/Gif.css\"\r\n\r\nconst ShowGifs = () => {\r\n\tconst GifsArr = [\"CSGO\", \"Videogames\", \"Cyberpunk\", \"God of War\"];\r\n\t\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t{\r\n\t\t\t\tGifsArr.map((gif, i) => {\r\n\t\t\t\t\treturn <Link key={i} className=\"Gif btn btn-dark\" to={`/gif/${gif}`}>{gif}</Link>\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ShowGifs;","import React from 'react'\nimport \"./App.css\";\nimport ListOfGifs from \"./components/ListOfGifs\";\nimport {Link, Route} from 'wouter'\nimport ShowGifs from './components/ShowGifs';\n\nfunction App() {\n\n   return (\n      <div className=\"App\">\n         <section className=\"App-content\">\n\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t<h1>App</h1>\n\t\t\t\t</Link>\n\n\t\t\t\t<ShowGifs/>\n\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/gif/:keyword\" \n\t\t\t\t\tcomponent={ListOfGifs}\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t{/* <ListOfGifs keyword={'panda'}/> */}\n\t\t\t\t{/*1 <button onClick={() => setKeyword('mapache')} className=\"btn btn-dark\">Cambiar Gifs</button> */}\n         </section>\n      </div>\n   );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import \"bootstrap/dist/js/bootstrap.bundle.min\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}